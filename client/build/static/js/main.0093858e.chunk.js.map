{"version":3,"sources":["logo.svg","NavBar.js","HomePage.js","AboutPage.js","SingleProject.js","PortfolioPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","containerDiv","textAlign","width","display","justifyContent","linkBox","color","border","padding","textDecoration","fontSize","NavBar","react_default","a","createElement","style","Link","to","height","flexDirection","fname","paddingTop","lineHeight","lname","paddingBottom","title","HomePage","imgSection","aboutInfo","aboutText","profileImage","iconImage","maxHeight","icons","margin","links","AboutPage","src","href","listElement","listStyle","portfolioText","imageContainer","portfolioImage","objectFit","portfolioTitle","portfolioDesc","portfolioTech","SingleProject","_ref","pname","desc","tech","join","concat","projects","name","PorfolioPage","map","project","src_SingleProject","App","BrowserRouter","className","Route","path","component","exact","PortfolioPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0093858e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = {\r\n  containerDiv: {\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n  },\r\n  linkBox: {\r\n    color: '#FFF',\r\n    border: '1px solid #399BDB',\r\n    padding: '5% 0',\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    fontSize: '30px',\r\n  },\r\n}\r\n\r\nconst NavBar = () => (\r\n  <div style={styles.containerDiv}>\r\n    <Link style={styles.linkBox} to=\"/\">\r\n      Home\r\n    </Link>\r\n    <Link style={styles.linkBox} to=\"/about\">\r\n      About\r\n    </Link>\r\n    <Link style={styles.linkBox} to=\"/portfolio\">\r\n      Portfolio\r\n    </Link>\r\n  </div>\r\n)\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst styles = {\r\n  containerDiv: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    textAlign: 'center',\r\n  },\r\n  fname: {\r\n    fontSize: '120px',\r\n    paddingTop: '10%',\r\n    lineHeight: '50px',\r\n  },\r\n  lname: {\r\n    fontSize: '120px',\r\n    paddingBottom: '2%',\r\n  },\r\n  title: {\r\n    fontSize: '50px',\r\n    paddingTop: '5%',\r\n  },\r\n}\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div style={styles.containerDiv}>\r\n      <div style={styles.fname}>Akshay</div>\r\n      <div style={styles.lname}>Manchanda</div>\r\n      <div style={styles.title}>Full Stack Developer</div>\r\n    </div>\r\n  )\r\n}\r\nexport default HomePage\r\n","import React from 'react'\r\n\r\nconst styles = {\r\n  containerDiv: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    textAlign: 'center',\r\n  },\r\n  imgSection: {\r\n    width: '50%',\r\n  },\r\n  aboutInfo: {\r\n    width: '50%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  aboutText: {\r\n    textAlign: 'justify',\r\n    padding: '2% 5%',\r\n    fontSize: '30px',\r\n  },\r\n  profileImage: {\r\n    width: '100%',\r\n    height: 'auto',\r\n  },\r\n  iconImage: {\r\n    width: '100%',\r\n    height: 'auto',\r\n    maxHeight: '300px',\r\n  },\r\n  icons: {\r\n    margin: '0 auto',\r\n    width: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  links: {\r\n    width: '200px',\r\n  },\r\n}\r\n\r\nconst AboutPage = () => (\r\n  <div style={styles.containerDiv}>\r\n    <div style={styles.imgSection}>\r\n      <img style={styles.profileImage} src=\"./assets/images/profile.jpg\" />\r\n    </div>\r\n    <div style={styles.aboutInfo}>\r\n      <div style={styles.aboutText}>\r\n        I am an experienced Full Stack Developer with a passion for media in many different forms. I\r\n        love reading, watching movies and playing games. If you leave me alone long enough you will\r\n        probably find me doing one of those things. I also love solving problems. The experience of\r\n        looking at a problem, breaking it down and solving it piece by piece has always been\r\n        rewarding and enjoyable. I also love to challenge myself so I am looking for ways to improve\r\n        my code and skills at every oppurtunity.\r\n      </div>\r\n      <div style={styles.icons}>\r\n        <a style={styles.links} href=\"https://github.com/Kayahs/\">\r\n          <img style={styles.iconImage} src=\"./assets/icons/github.png\" />\r\n        </a>\r\n        <a style={styles.links} href=\"https://www.linkedin.com/in/akshay-manchanda/\">\r\n          <img style={styles.iconImage} src=\"./assets/icons/linkedin.png\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default AboutPage\r\n","import React from 'react'\r\n\r\nconst styles = {\r\n  listElement: {\r\n    listStyle: 'none',\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  portfolioText: {\r\n    width: '50%',\r\n  },\r\n  imageContainer: {\r\n    width: '50%',\r\n  },\r\n  portfolioImage: {\r\n    width: '100%',\r\n    objectFit: 'contain',\r\n  },\r\n  portfolioTitle: {\r\n    fontSize: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  portfolioDesc: {\r\n    fontSize: '30px',\r\n  },\r\n  portfolioTech: {\r\n    fontSize: '20px',\r\n  },\r\n}\r\n\r\nconst SingleProject = ({ pname, desc, tech }) => {\r\n  return (\r\n    <li style={styles.listElement}>\r\n      <div style={styles.portfolioText}>\r\n        <h2 style={styles.portfolioTitle}>{pname}</h2>\r\n        <p style={styles.portfolioDesc}>\r\n          <strong>Description:</strong> {desc}\r\n        </p>\r\n        <p>\r\n          <strong>Technologies Used:</strong> {tech.join(', ')}\r\n        </p>\r\n      </div>\r\n      <div style={styles.imageContainer}>\r\n        <img style={styles.portfolioImage} src={`./assets/images/${pname}.png`} />\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default SingleProject\r\n","import React from 'react'\r\nimport SingleProject from './SingleProject'\r\nconst projects = [\r\n  {\r\n    name: 'Aloha',\r\n    desc: `A simple HTML/CSS page with minimal Javascript used to practice my basic skills`,\r\n    tech: ['HTML', 'CSS', 'JS'],\r\n  },\r\n  {\r\n    name: 'Instanews',\r\n    desc: `A one page site that connects to the New York Times API to get information about current \r\n            stories and displays them.`,\r\n    tech: ['HTML', 'CSS', 'JS'],\r\n  },\r\n  { name: 'Pong', desc: `Simple version of Pong made using Javascript.`, tech: ['JS', 'CSS'] },\r\n  {\r\n    name: 'Quotes',\r\n    desc: `A wordpress site that has the ability to store quotes, allow the user to add new \r\n            quotes and offer a vareity of ways to show the stored quotes.`,\r\n    tech: ['PHP', 'Wordpress', 'CSS', 'JS'],\r\n  },\r\n  {\r\n    name: 'PlannedParenthood',\r\n    desc: `A wordpress site that was initially part of a project for a community partner of RED Academy,\r\n            it has now become a contract that a team led by me is actively working on and completing the\r\n            site for public launch.`,\r\n    tech: ['PHP', 'Wordpress', 'CSS', 'JS'],\r\n  },\r\n  {\r\n    name: 'Foostown',\r\n    desc: `React App created in conjunction with my classmates in the FullStack Developer class \r\n            at RED Academy that allowed for user accounts, match information, statistics on matches and \r\n            the ability to create more matches. The server side architechture included PostGres as a \r\n            database and GraphQL as our connector.`,\r\n    tech: ['ReactJS', 'Material UI', 'GraphQL', 'Apollo', 'PostGres'],\r\n  },\r\n  {\r\n    name: 'R10',\r\n    desc: `React Native App that allowed a user to browse through a list of conferences to get their \r\n            information and information about the speakers at the conference. Users could also favourite \r\n            talks that they were interested in and see that list in a favourites tab.`,\r\n    tech: ['React Native', 'Material UI', 'GraphQL', 'Apollo'],\r\n  },\r\n  {\r\n    name: 'Mozaik',\r\n    desc: `React Native App developed for Mozaik Global by our FullStack Developer class at RED Academy \r\n            as one part of a Learning Material Marketplace. The app had the functionality to create and \r\n            login to user accounts, browse through learning materials, see self created learning materials,\r\n            search through all learning materials and manage user information(change avatar, change password,\r\n            change name, change email). The front end was built in React Native with Maerial UI for styling and\r\n            the back end was built on top of Apollo and GraphQL with PostGres as the database.`,\r\n    tech: ['React Native', 'Material UI', 'GraphQL', 'Apollo', 'PostGres'],\r\n  },\r\n]\r\nconst PorfolioPage = () => (\r\n  <div>\r\n    <ul>\r\n      {projects.map(project => (\r\n        <SingleProject pname={project.name} desc={project.desc} tech={project.tech} />\r\n      ))}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default PorfolioPage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport logo from './logo.svg'\r\nimport NavBar from './NavBar'\r\nimport HomePage from './HomePage'\r\nimport AboutPage from './AboutPage'\r\nimport PortfolioPage from './PortfolioPage'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Route path=\"/\" component={NavBar} />\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/about\" exact component={AboutPage} />\r\n        <Route path=\"/portfolio\" exact component={PortfolioPage} />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}